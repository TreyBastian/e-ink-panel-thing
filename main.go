package main

import (
	"image"
	"log"
	"time"

	"golang.org/x/image/font"
	"golang.org/x/image/font/basicfont"
	"golang.org/x/image/math/fixed"
	"periph.io/x/conn/v3/spi/spireg"
	"periph.io/x/devices/v3/epd"
	"periph.io/x/devices/v3/ssd1306/image1bit"
	"periph.io/x/host/v3"
)

var EPD4in2V2 = epd.Opts{
	W: 400,
	H: 300,
	FullUpdate: epd.LUT{
		0x01, 0x0A, 0x1B, 0x0F, 0x03, 0x01, 0x01,
		0x05, 0x0A, 0x01, 0x0A, 0x01, 0x01, 0x01,
		0x05, 0x08, 0x03, 0x02, 0x04, 0x01, 0x01,
		0x01, 0x04, 0x04, 0x02, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x0A, 0x1B, 0x0F, 0x03, 0x01, 0x01,
		0x05, 0x4A, 0x01, 0x8A, 0x01, 0x01, 0x01,
		0x05, 0x48, 0x03, 0x82, 0x84, 0x01, 0x01,
		0x01, 0x84, 0x84, 0x82, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x0A, 0x1B, 0x8F, 0x03, 0x01, 0x01,
		0x05, 0x4A, 0x01, 0x8A, 0x01, 0x01, 0x01,
		0x05, 0x48, 0x83, 0x82, 0x04, 0x01, 0x01,
		0x01, 0x04, 0x04, 0x02, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x8A, 0x1B, 0x8F, 0x03, 0x01, 0x01,
		0x05, 0x4A, 0x01, 0x8A, 0x01, 0x01, 0x01,
		0x05, 0x48, 0x83, 0x02, 0x04, 0x01, 0x01,
		0x01, 0x04, 0x04, 0x02, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x8A, 0x9B, 0x8F, 0x03, 0x01, 0x01,
		0x05, 0x4A, 0x01, 0x8A, 0x01, 0x01, 0x01,
		0x05, 0x48, 0x03, 0x42, 0x04, 0x01, 0x01,
		0x01, 0x04, 0x04, 0x42, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x02, 0x00, 0x00, 0x07, 0x17, 0x41, 0xA8,
		0x32, 0x30},
	PartialUpdate: epd.LUT{0x00, 0x17, 0x00, 0x00, 0x00, 0x02,
		0x00, 0x17, 0x17, 0x00, 0x00, 0x02,
		0x00, 0x0A, 0x01, 0x00, 0x00, 0x01,
		0x00, 0x0E, 0x0E, 0x00, 0x00, 0x02,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
}

func main() {
	log.Println("We are starting")
	if _, err := host.Init(); err != nil {
		log.Fatal(err)
	}

	b, err := spireg.Open("")
	if err != nil {
		log.Fatal(err)
	}
	defer b.Close()

	log.Println("Creating SPI hat")
	dev, err := epd.NewSPIHat(b, &epd.EPD2in13v2)
	if err != nil {
		log.Fatalf("failed to initalize epd %v", err)
	}

	img := image1bit.NewVerticalLSB(dev.Bounds())

	f := basicfont.Face7x13
	drawer := font.Drawer{
		Dst:  img,
		Src:  &image.Uniform{image1bit.On},
		Face: f,
		Dot:  fixed.P(0, img.Bounds().Dy()-1-f.Descent),
	}
	for true {

		drawer.DrawString("Hello World")

		log.Println("drawing")
		if err := dev.Draw(dev.Bounds(), img, image.Point{}); err != nil {
			log.Fatal(err)
		}

		dev.DisplayFrame()

		log.Println("displayed")
		time.Sleep(1000)
	}
}
